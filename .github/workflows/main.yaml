name: CI

on:
  pull_request:
    branches: ["main"]

  push:
    branches: ["master", "main"]

jobs:
  check-branch:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: check-pr-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}
  linter:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Create environment variables files
        run: |
          envsubst < .env.tpl > .env

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: pydantic-to-django-model
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Linter
        run: |
          pre-commit install
          pre-commit run --all-files
